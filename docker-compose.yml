version: "3.0"

services:

  api:
    build:
      context: .
    image: moleculer
    env_file: docker-compose.env
    environment:
      SERVICES: api
      PORT: 3000
    links:
      - redis
    depends_on:
      - redis
    labels:
      - "traefik.enable=true"   
      - "traefik.backend=api"
      - "traefik.port=3000"
      - "traefik.frontend.entryPoints=http"
      - "traefik.frontend.rule=PathPrefix:/"
    volumes:
      - ./:/app
  

  serviceone:
    build:
      context: .
    image: moleculer
    env_file: docker-compose.env
    environment:
      SERVICES: serviceone
    links:
      - redis
    depends_on:
      - redis
    volumes:
      - ./:/app

  servicetwo:
    build:
      context: .
    image: moleculer
    env_file: docker-compose.env
    environment:
      SERVICES: servicetwo
    links:
      - redis
    depends_on:
      - redis
    volumes:
      - ./:/app

  redis:
    image: redis:alpine
    ports:
      - "6379"

  postgres:
    image: postgres:10.5
    restart: always
    environment:
      POSTGRES_USER: moleculer
      POSTGRES_PASSWORD: moleculer
      POSTGRES_DB: moleculer
      
    ports:
      - "5432:5432"

    volumes:
      - postgres:/var/lib/postgresql/data

  traefik:
    image: traefik
    command: --web --docker --docker.domain=docker.localhost --logLevel=INFO --docker.exposedbydefault=false
    ports:
      - "3000:80"
      - "3001:8080" 
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /dev/null:/traefik.toml

volumes:
  postgres:
